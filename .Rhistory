glm_fit = function(y, x, beta_start, k = 1){
w = matrix(0, nrow = length(y), ncol = length(y))
beta = beta_start
for( i in 2:k ){
eta = x %*% beta
mu = exp(eta)/(1 + exp(eta))
diag(w) = mu * (1- mu)
info = t(x) %*% w %*% x
inverseJ  = solve(info)
U = t(x) %*% (y-mu)
beta = beta + inverseJ %*% U
stder = diag(inverseJ)^0.5
}
return(list(beta, stder))
}
glm_fit(y, x, c(0,0,0,0,0,0), 35 )
ownfit = glm_fit(y, x, c(0,0,0,0,0,0), 35 )
fit2 = glm(Survived ~ Sex + Age + Pclass + Sex*Pclass, family = 'binomial', data = dat)
print.matrix(ownfit, rowlab=character(0), collab=character(0),
quote=TRUE, right=FALSE)
print.matrix(ownfit)
print(ownfit)
?print
print(ownfit,rowlab(0) = "re")
print(ownfit,rowlab(0) = "re")
install.packages(DT)
install.packages("DT")
library(DT)
datatable(ownfit)
datatable(ownfit[0])
datatable(ownfit[[1]])
ownfit[[0]]
ownfit[[1]]
ownfit[[2]]
t(ownfit[[2]])
ownfit[[2]]
solve(ownfit[[2]])
for (i in 1:6){
print(ownfit[[1,i]])
}
print(ownfit[1])
print(ownfit[1][i])
for (i in 1:6){
print(ownfit[1][i])
}
print(ownfit[1,i])
ownfit = glm_fit(y, x, c(0,0,0,0,0,0), 35 )
for (i in 1:6){
print(ownfit[1,i])
}
estimates = ownfit[1]
print(estimates[1])
for (i in 1:6){
print(estimates[c(i)])
}
for(i in 1:6){
print(estimates[c(i)])
}
print(estimates[c(,i)])
for(i in 1:6){
print(estimates[c(,i)])
}
print(estimates[c(1,i)])
for(i in 1:6){
print(estimates[c(i)])
}
estimates[c(2)]
estimates[c(1)]
estimates[c(1)[c(1)]]
estimates[c(1)[c(2)]]
standard_errors = ownfit[2]
standard_errors
printable = c(estimates,standard_errors)
printable
estimates[1,1]
estimates[1[,1]]
estimates[1[1,1]]
estimates[1[1]]
estimates[1][,1]
estimates[1][1]
printable = rbind(estimates,standard_errors)
printable
printable[1]
printable[c(1)]
printable[c(1)[1]]
printable[c(1,1)]
printable[c(1)[1]]
printable[c(1)[1][1]]
printable[1][1]
printable
printable[2]
t(printable[2])
print(t(printable[2]))
print(t(standard_errors))
t(estimates)
class(standard_errors)
list.as.matrix(standard_errors)
estimates = matrix(lunlist(ownfit[1]))
t(estimates)
estimates
estimates = matrix(unlist(ownfit[1]))
estimates
standard_errors = matrix(unlist(ownfit[2]))
standard_errors
final = rbind(estimates, standard_errors)
final
final = cbind(estimates, standard_errors)
final
print.table(final)
datatable(final)
?datatable
columns = c(Estimates, Stnd.err.)
columns = c("Estimates","Stnd.err.")
datatable(final,style = "default")
standard_errors[c(1)]
columns
knitr::kable(final)
final2 = rbind(columns,final)
final2
ownfit
rows = row.names(ownfit)
rows
rows = rownames(ownfit)
rows
ownfit
rows = c("(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
rows = r("(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
rows = c("(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
rows
t(rows)
data.frame(rows)
row2col=data.frame(rows)
final3 = cbind(row2col, final2)
rows = c("","(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
final3 = cbind(row2col, final2)
rows = c("0","(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
row2col=data.frame(rows)
final3 = cbind(row2col, final2)
knitr::kable(final)
knitr::kable(final3)
columns
columns = c("Estimates", "Stnd.err.")
?glm
knitr::opts_chunk$set(echo = TRUE)
fit2 = glm(Survived ~ Sex + Age + Pclass + Sex*Pclass, family = 'binomial', data = dat)
summary(fit2)
View(dat)
View(dat)
vcov(fit2)
summary(fit2)
secondthird =
coef(fit2)
secondthird = 0
coef(fit2)
coef(fit2)[0]
coef(fit2)[1]
summary(fit2)
cos = coef(fit2)
cos[1]
fit1 = glm( Survived ~ Sex + Age + Pclass + Fare + Sex*Pclass, family = binomial(link = 'logit'), data = dat )
x = model.matrix(fit1)
y = matrix(Survived, length(Survived), 1)
ownfit = glm_fit(y, x, c(0,0,0,0,0,0), 35 )
y = matrix(Survived, length(Survived), 1)
attach(dat)
y = matrix(Survived, length(Survived), 1)
ownfit = glm_fit(y, x, c(0,0,0,0,0,0), 35 )
rows = c("0","(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
row2col=data.frame(rows)
estimates = matrix(unlist(ownfit[1]))
standard_errors = matrix(unlist(ownfit[2]))
columns = c("Estimates", "Stnd.err.")
final2 = rbind(columns,final)
final3 = cbind(row2col, final2)
fit2 = glm(Survived ~ Sex + Age + Pclass + Sex*Pclass, family = binomial(link = 'logit'), data = dat)
summary(fit2)
first = cos[1] + cos[2] + cos[3]*25 + cos[4] + cos[5]
library(tree)
install.packages('tree')
install.packages(tree)
install.packages('tree')
install.packages('tree')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages('knitr')
install.packages(c("knitr", "tree"))
install.packages(c("knitr", "tree"))
knitr::opts_chunk$set(echo = TRUE)
library(tree)
fit4 = tree(Survived ~.)
fit4 = tree(Survived ~., data = dat)
summary(fit4)
plot(fit4)
?tree
plot(fit4)
plot(fit4, text('hey'))
plot(fit4, text(1))
install.packages('rpart', 'rpart.plot')
# Create a decision tree model
tree <- rpart(survived~., data=dat)
fit4 =
# Load rpart and rpart.plot
library(rpart)
library(rpart.plot)
install.packages('rpart.plot')
library(rpart.plot)
# Create a decision tree model
tree <- rpart(survived~., data=dat)
# Create a decision tree model
tree <- rpart(Survived~., data=dat)
plot(tree)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- rpart(Survived~., data=dat, cp = .02)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- rpart(Survived~., data=dat, cp = .2)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- rpart(Survived~., data=dat, cp = .002)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- rpart(Survived~., data=dat)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- tree(Survived~., data=dat)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
plot(tree)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
# Create a decision tree model
tree <- rpart(Survived~., data=dat)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=TRUE)
rpart.plot(tree, box.palette="RdBu", shadow.col="gray", nn=FALSE)
rpart.plot(tree, box.palette="RdBu", nn=FALSE)
rpart.plot(tree, box.palette="RdBu", nn=T)
# Create a decision tree model
tree <- tree(Survived~., data=dat)
plot(tree)
text(tree)
# Create a decision tree model
tree <- tree(Survived~., data=dat, iris)
plot(tree)
text(tree)
plot(tree)
# Create a decision tree model
tree <- rpart(Survived~., data=dat)
rpart.plot(tree, box.palette="RdBu", nn=T)
# Create a decision tree model
tree <- tree(Survived~., data=dat)
plot(tree)
tree <- tree(factor(Survived)~., data=dat)
summary(tree)
tree1 <- tree(factor(Survived)~., data=dat)
summary(tree)
summary(tree1)
tree1
plot(tree1)
text(tree1)
plot.new(tree1)
plot.new()
plot(tree1)
text(tree1)
text(tree1)}
plot.new(){
knitr::opts_chunk$set(echo = TRUE)
glm_fit = function(y, x, beta_start, k = 1){
w = matrix(0, nrow = length(y), ncol = length(y))
beta = beta_start
for( i in 2:k ){
eta = x %*% beta
mu = exp(eta)/(1 + exp(eta))
diag(w) = mu * (1- mu)
info = t(x) %*% w %*% x
inverseJ  = solve(info)
U = t(x) %*% (y-mu)
beta = beta + inverseJ %*% U
stder = diag(inverseJ)^0.5
}
return(list(beta, stder))
}
dat = read.table('Assignment_2_Titanic_SetA.txt', h = TRUE)
attach(dat)
fit1 = glm( Survived ~ Sex + Age + Pclass + Fare + Sex*Pclass, family = binomial(link = 'logit'), data = dat )
x = model.matrix(fit1)
y = matrix(Survived, length(Survived), 1)
ownfit = glm_fit(y, x, c(0,0,0,0,0,0), 35 )
rows = c("0","(intercept)","Sexmale","Age","Pclass", "Fare", "Sexmale:Pclass")
row2col=data.frame(rows)
estimates = matrix(unlist(ownfit[1]))
standard_errors = matrix(unlist(ownfit[2]))
columns = c("Estimates", "Stnd.err.")
final = cbind(estimates, standard_errors)
final2 = rbind(columns,final)
final3 = cbind(row2col, final2)
knitr::kable(final3)
fit2 = glm(Survived ~ Sex + Age + Pclass + Sex*Pclass, family = binomial(link = 'logit'), data = dat)
summary(fit2)
cos = coef(fit2)
secondthird = cos[1] + cos[2] + cos[3]*25 + cos[4]*(5) + cos[5]
first = cos[1] + cos[2] + cos[3]*25 + cos[4] + cos[5]
vcov(fit2)
fit3 = glm(Survived ~ Sex, family = binomial(link = 'logit'), data = dat)
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
summary(tree1)
tree1
plot.new()
plot(tree1)
text(tree1)
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
plot(tree1)
text(tree1)
text(tree1)
?plot
plot(tree1, main = "Cassification tree for titanic data")
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
?plot
plot(tree1, main = "Cassification tree for titanic data")
text(tree1)
tree1
dat2 = dat
dat2$Sex = as.factor(Sex)
tree1 <- tree(factor(Survived)~., data=dat2)
plot(tree1)
text(tree1)
library(tree)
dat2 = dat
dat2$Sex = as.factor(Sex)
tree1 <- tree(factor(Survived)~., data=dat2)
plot(tree1)
text(tree1)
tree1
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
plot(tree1)
tree1
tree2
tree2 <- rpart(factor(Survived)~., data = dat)
tree2
tree1
names(dat)
rpart.plot(tree2)
tree2 <- rpart(factor(Survived)~., data = dat, cp = 0.02)
rpart.plot(tree2)
tree2 <- rpart(factor(Survived)~., data = dat, cp = 0.002)
rpart.plot(tree2)
tree2 <- rpart(factor(Survived)~., data = dat, cp = 0.0002)
rpart.plot(tree2)
tree2 <- rpart(factor(Survived)~., data = dat, cp = 0.00002)
rpart.plot(tree2)
tree2 <- rpart(factor(Survived)~., data = dat, cp = 0.0000002)
rpart.plot(tree2)
?anova
anova(fit3, fit3_1, test = 'chisq')
names(dat)
fit3_1 = glm(Survived ~ Sex + Age, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1, test = 'chisq')
anova(fit3, fit3_1, test = 'Chisq')
anova(fit3, fit3_1, test = 'NULL')
anova(fit3, fit3_1, test = NULL)
anova(fit3, fit3_1, test = "F")
anova(fit3, fit3_1, test = "Chisq")
names(dat)
fit3_2 = glm(Survived ~ Sex + Age + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1,fit3_2, test = "Chisq")
fit3_2 = glm(Survived ~ Sex + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1,fit3_2, test = "Chisq")
fit3 = glm(Survived ~ Sex, family = binomial(link = 'logit'), data = dat)
fit3_1 = glm(Survived ~ Sex + Age, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1, test = "Chisq")
fit3_2 = glm(Survived ~ Sex + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1,fit3_2, test = "Chisq")
fit3_2 = glm(Survived ~ Sex + age + Pclass , family = binomial(link = 'logit'), data = dat)
fit3_2 = glm(Survived ~ Sex + Age + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1,fit3_2, test = "Chisq")
summary(fit3_2)
anova(fit3, fit3_1, test = "Chisq")
names(dat)
fit3_3 = glm(Survived ~ Sex + Age + Pclass + Fare, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1,fit3_2, fit3_3 test = "Chisq")
anova(fit3, fit3_1,fit3_2, fit3_3, test = "Chisq")
anova(fit3,fit3_2, test = "Chisq")
anova(fit3, fit3_1, test = "Chisq")
names(dat)
fit3 = glm(Survived ~ Sex, family = binomial(link = 'logit'), data = dat)
summary(fit3)
anova(fit3, fit3_1, test = "Chisq")
fit3_2 = glm(Survived ~ Sex + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, test = "Chisq")
anova(fit3, fit3_1, test = "Chisq")
fit3_3 = glm(Survived ~ Sex + Pclass + Fare, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_3, test = "Chisq")
anova(fit3_2, fit3_3, test = "Chisq")
anova(fit3, fit3_3, test = "Chisq")
fit3_3 = glm(Survived ~ Sex + Fare, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_3, test = "Chisq")
fit3_3 = glm(Survived ~ Sex + Pclass + Fare, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_3, test = "Chisq")
anova(fit3_2, fit3_3, test = "Chisq")
anova(fit3,fit3_2, fit3_3, test = "Chisq")
names(dat)
fit3_4 = glm(Survived ~ Sex + Pclass + Fare + Embarked, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_4, test = "Chisq")
fit3_4 = glm(Survived ~ Sex + Pclass + Embarked, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_4, test = "Chisq")
names(dat)
fit3_4 = glm(Survived ~ Sex + Pclass + Parch, family = binomial(link = 'logit'), data = dat)
fit3_5 = glm(Survived ~ Sex + Pclass + Parch, family = binomial(link = 'logit'), data = dat)
fit3_4 = glm(Survived ~ Sex + Pclass + Embarked, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_4, test = "Chisq")
fit3_5 = glm(Survived ~ Sex + Pclass + Parch, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_4, test = "Chisq")
anova(fit3,fit3_2, fit3_5, test = "Chisq")
anova(fit3, fit3_5, test = "Chisq")
anova(fit3,fit3_2, fit3_5, test = "Chisq")
names(dat)
fit3_1 = glm(Survived ~ Sex + Age, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1, test = "Chisq")
fitall = glm(Survived ~ ., family = binomial(link = 'logit'), data = dat)
summary(fitall)
fit3_1 = glm(Survived ~ Sex + Pclass + Age, family = binomial(link = 'logit'), data = dat)
anova(fit3, fit3_1, test = "Chisq")
anova(fit3_2, fit3_1, test = "Chisq")
fit3_3 = glm(Survived ~ Sex + Pclass + Age + Fare, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_3, test = "Chisq")
anova(fit3,fit3_1, fit3_3, test = "Chisq")
fit3_4 = glm(Survived ~ Sex + Pclass + Age + Embarked, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_1, fit3_4, test = "Chisq")
fit3_5 = glm(Survived ~ Sex + Pclass + Age + Parch, family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_2, fit3_5, test = "Chisq")
fit3_2 = glm(Survived ~ Sex + Pclass + Age, family = binomial(link = 'logit'), data = dat)
fit3_1 = glm(Survived ~ Sex + Pclass , family = binomial(link = 'logit'), data = dat)
anova(fit3,fit3_1, test = "Chisq")
anova(fit3_1, fit3_2, test = "Chisq")
anova(fit3_2, fit3_3, test = "Chisq")
anova(fit3_2, fit3_4, test = "Chisq")
anova(fit3_1, fit3_2, test = "Chisq")
anova(fit3_2, fit3_3, test = "Chisq")
anova(fit3_2, fit3_4, test = "Chisq")
fit3_5 = glm(Survived ~ Sex + Pclass + Age + Parch, family = binomial(link = 'logit'), data = dat)
anova(fit3_2, fit3_5, test = "Chisq")
fit3_5 = glm(Survived ~ Sex + Pclass + Age + Parch, family = binomial(link = 'logit'), data = dat)
anova(fit3_2, fit3_5, test = "Chisq")
names(dat)
anova(fit3_2, fit3_3, test = "Chisq")
anova(fit3,fit3_1, test = "Chisq")
anova(fit3_1, fit3_2, test = "Chisq")
cos
cos[1]
odds_first = exp(cos[4] + cos[5])
odds_third =  exp(3*cos[4] + 3*cos[5])
odds_ratio1_3 = odds_first/odds_third
odds_second = exp(2*cos[4] + 2*cos[5])
vars = vcov(fit2)
norm95 = qnorm(95)
norm95 = qnorm(0.95)
norm95
norm95 = qnorm(0.475)
norm95
norm95 = qnorm(95%)
norm95 = qnorm(.99)
norm95
norm95 = qnorm(.95)
norm95
norm95 = qnorm(.99)
norm95
norm95 = 1.96
norm95
var1 = 4*vars[4,4] + 8*vars[4,5] + 4*vars[5,5]
CI1_3 = odds_ratio1_3 * exp(norm95*sqrt(var1))
CI1_3_upper = odds_ratio1_3 * exp(norm95*sqrt(var1))
CI1_3_lower = odds_ratio1_3 * exp(-norm95*sqrt(var1))
CIone = c(CI1_3_lower, CI1_3_lower)
CIone
CIone = c(CI1_3_lower, CI1_3_upper)
CIone
CI2_3_upper = odds_ratio2_3 * exp(norm95*sqrt(var2))
CI2_3_lower = odds_ratio2_3 * exp(-norm95*sqrt(var2))
odds_ratio2_3 = odds_second/odds_third
CI2_3_upper = odds_ratio2_3 * exp(norm95*sqrt(var2))
var2 = vars[4,4] + vars[5,5] + 2*vars[4,5]
CI2_3_upper = odds_ratio2_3 * exp(norm95*sqrt(var2))
CI2_3_lower = odds_ratio2_3 * exp(-norm95*sqrt(var2))
CItwo = c(CI2_3_lower, CI2_3_upper)
CItwo
odds_ratio1_3 = odds_first/odds_third
odds_ratio1_3
CIone
odds_ratio2_3
CItwo
text(tree1, pretty = 0)
#classification tree
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
plot(tree1)
text(tree1, pretty = 0)
tree1
#classification tree
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
plot(tree1)
text(tree1, pretty = 0)
anova(fit3_2, fit3_5, test = "Chisq")
install.packages('tinytex')
summary(fit3_2)
#classification tree
library(tree)
tree1 <- tree(factor(Survived)~., data=dat)
plot(tree1, main = "hi")
text(tree1, pretty = 0)
